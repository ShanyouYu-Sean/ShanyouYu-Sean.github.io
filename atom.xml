<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小鱼肖恩</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://seanthefish.com/"/>
  <updated>2020-12-09T09:34:26.245Z</updated>
  <id>http://seanthefish.com/</id>
  
  <author>
    <name>Sean Yu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://seanthefish.com/2020/12/09/mysql-8-distributed-tx/"/>
    <id>http://seanthefish.com/2020/12/09/mysql-8-distributed-tx/</id>
    <published>2020-12-09T09:33:41.377Z</published>
    <updated>2020-12-09T09:34:26.245Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://seanthefish.com/2020/12/09/mysql-7-ha/"/>
    <id>http://seanthefish.com/2020/12/09/mysql-7-ha/</id>
    <published>2020-12-09T09:33:16.720Z</published>
    <updated>2020-12-09T09:33:16.720Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://seanthefish.com/2020/12/09/mysql-6-copy/"/>
    <id>http://seanthefish.com/2020/12/09/mysql-6-copy/</id>
    <published>2020-12-09T09:30:57.554Z</published>
    <updated>2020-12-09T09:35:10.627Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mysql之分区，分表，分库</title>
    <link href="http://seanthefish.com/2020/12/03/mysql-5-scale/"/>
    <id>http://seanthefish.com/2020/12/03/mysql-5-scale/</id>
    <published>2020-12-03T03:00:00.000Z</published>
    <updated>2020-12-09T13:39:14.520Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;分区：物理数据库的设计方式，还是一张表，但是表的数据存储在不同的硬盘。&lt;/p&gt;
&lt;p&gt;分表：最终由N张表，系统读写时需要通过一定的规则找到数据需要映射到的表然后进行操作。&lt;/p&gt;
&lt;p&gt;分库：多个数据库，每个数据库中有多张表。&lt;/p&gt;
&lt;h2 id=&quot;切分方式&quot;&gt;&lt;a
        
      
    
    </summary>
    
      <category term="mysql" scheme="http://seanthefish.com/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://seanthefish.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql之query</title>
    <link href="http://seanthefish.com/2020/12/03/mysql-4-query/"/>
    <id>http://seanthefish.com/2020/12/03/mysql-4-query/</id>
    <published>2020-12-03T02:00:00.000Z</published>
    <updated>2020-12-09T10:10:01.476Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;对 MySql 进行优化，必须对 Scheme，索引，查询语句一同优化。&lt;/p&gt;
&lt;p&gt;通过前面的章节我们掌握了 Scheme 和
        
      
    
    </summary>
    
      <category term="mysql" scheme="http://seanthefish.com/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://seanthefish.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql之锁和mvcc</title>
    <link href="http://seanthefish.com/2020/12/02/mysql-3-lock/"/>
    <id>http://seanthefish.com/2020/12/02/mysql-3-lock/</id>
    <published>2020-12-02T04:00:00.000Z</published>
    <updated>2020-12-09T09:31:45.538Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;参考 &lt;a href=&quot;https://draveness.me/database-concurrency-control/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="mysql" scheme="http://seanthefish.com/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://seanthefish.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql之索引优化</title>
    <link href="http://seanthefish.com/2020/12/02/mysql-2-index/"/>
    <id>http://seanthefish.com/2020/12/02/mysql-2-index/</id>
    <published>2020-12-02T03:00:00.000Z</published>
    <updated>2020-12-09T09:31:31.250Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;索引的优点&quot;&gt;&lt;a href=&quot;#索引的优点&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="mysql" scheme="http://seanthefish.com/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://seanthefish.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql之schema与数据类型优化</title>
    <link href="http://seanthefish.com/2020/12/02/mysql-1-schema/"/>
    <id>http://seanthefish.com/2020/12/02/mysql-1-schema/</id>
    <published>2020-12-02T02:00:00.000Z</published>
    <updated>2020-12-09T09:31:20.727Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;选择优化的数据类型&quot;&gt;&lt;a href=&quot;#选择优化的数据类型&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="mysql" scheme="http://seanthefish.com/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://seanthefish.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>nio</title>
    <link href="http://seanthefish.com/2020/12/01/nio-3/"/>
    <id>http://seanthefish.com/2020/12/01/nio-3/</id>
    <published>2020-12-01T05:00:00.000Z</published>
    <updated>2020-12-06T13:21:20.456Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;转载自 海纳老师的专栏 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/27296046&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://zhuanlan.zhihu.com/p/27296046&lt;/a&gt; 
        
      
    
    </summary>
    
      <category term="nio" scheme="http://seanthefish.com/categories/nio/"/>
    
    
      <category term="nio" scheme="http://seanthefish.com/tags/nio/"/>
    
  </entry>
  
  <entry>
    <title>epoll的本质</title>
    <link href="http://seanthefish.com/2020/12/01/nio-2/"/>
    <id>http://seanthefish.com/2020/12/01/nio-2/</id>
    <published>2020-12-01T04:00:00.000Z</published>
    <updated>2020-12-06T13:21:09.224Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;放三个链接，目前能看到讲解epoll最好的文章，感谢作者。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/63179839&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="nio" scheme="http://seanthefish.com/categories/nio/"/>
    
    
      <category term="nio" scheme="http://seanthefish.com/tags/nio/"/>
    
  </entry>
  
  <entry>
    <title>认识socket和Linux io模型</title>
    <link href="http://seanthefish.com/2020/12/01/nio-1/"/>
    <id>http://seanthefish.com/2020/12/01/nio-1/</id>
    <published>2020-12-01T03:00:00.000Z</published>
    <updated>2020-12-06T13:21:05.703Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;什么是socket&quot;&gt;&lt;a href=&quot;#什么是socket&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="nio" scheme="http://seanthefish.com/categories/nio/"/>
    
    
      <category term="nio" scheme="http://seanthefish.com/tags/nio/"/>
    
  </entry>
  
  <entry>
    <title>网络基础</title>
    <link href="http://seanthefish.com/2020/12/01/network-1/"/>
    <id>http://seanthefish.com/2020/12/01/network-1/</id>
    <published>2020-12-01T02:00:00.000Z</published>
    <updated>2020-12-09T12:49:08.785Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;文章参考 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/147370653&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://zhuanlan.zhihu.com/p/147370653&lt;/a&gt; &lt;a
        
      
    
    </summary>
    
      <category term="network" scheme="http://seanthefish.com/categories/network/"/>
    
    
      <category term="network" scheme="http://seanthefish.com/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>深拷贝与浅拷贝</title>
    <link href="http://seanthefish.com/2020/11/30/deep-copy/"/>
    <id>http://seanthefish.com/2020/11/30/deep-copy/</id>
    <published>2020-11-30T02:00:00.000Z</published>
    <updated>2020-12-05T08:51:38.191Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;转自 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/95686213&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://zhuanlan.zhihu.com/p/95686213&lt;/a&gt;  有改动&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
      <category term="基础" scheme="http://seanthefish.com/categories/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="基础" scheme="http://seanthefish.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>raft算法</title>
    <link href="http://seanthefish.com/2020/11/29/raft/"/>
    <id>http://seanthefish.com/2020/11/29/raft/</id>
    <published>2020-11-29T02:00:00.000Z</published>
    <updated>2020-11-30T07:07:07.843Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;本来想在k8s章节里在说raft算法的，但看redis选主的时候发现用的也是raft算法，故提前把raft算法拿出来说一下。&lt;/p&gt;
&lt;p&gt;raft算法的动画演示：&lt;a href=&quot;http://thesecretlivesofdata.com/raft/&quot;
        
      
    
    </summary>
    
      <category term="raft" scheme="http://seanthefish.com/categories/raft/"/>
    
    
      <category term="raft" scheme="http://seanthefish.com/tags/raft/"/>
    
  </entry>
  
  <entry>
    <title>redis进阶之消息队列</title>
    <link href="http://seanthefish.com/2020/11/28/redis-8/"/>
    <id>http://seanthefish.com/2020/11/28/redis-8/</id>
    <published>2020-11-28T13:00:00.000Z</published>
    <updated>2020-12-01T09:01:45.404Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;文章转载自 &lt;a href=&quot;https://medium.com/@cheukfung/redis%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-f4f75404647f&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="redis" scheme="http://seanthefish.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://seanthefish.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis进阶之分布式锁</title>
    <link href="http://seanthefish.com/2020/11/28/redis-7/"/>
    <id>http://seanthefish.com/2020/11/28/redis-7/</id>
    <published>2020-11-28T12:00:00.000Z</published>
    <updated>2020-12-01T08:34:30.542Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;hr&gt;
&lt;p&gt;写过一个单节点版的redis分布式锁，源码在这里 &lt;a href=&quot;https://github.com/IBM/distributed-lock-spring-boot-starter&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="redis" scheme="http://seanthefish.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://seanthefish.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis进阶之缓存</title>
    <link href="http://seanthefish.com/2020/11/28/redis-6/"/>
    <id>http://seanthefish.com/2020/11/28/redis-6/</id>
    <published>2020-11-28T12:00:00.000Z</published>
    <updated>2020-12-04T11:56:24.852Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;缓存的收益和成本&quot;&gt;&lt;a href=&quot;#缓存的收益和成本&quot; class=&quot;headerlink&quot; title=&quot;缓存的收益和成本&quot;&gt;&lt;/a&gt;缓存的收益和成本&lt;/h2&gt;&lt;p&gt;收益:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加速读写:
        
      
    
    </summary>
    
      <category term="redis" scheme="http://seanthefish.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://seanthefish.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis进阶之集群</title>
    <link href="http://seanthefish.com/2020/11/28/redis-5/"/>
    <id>http://seanthefish.com/2020/11/28/redis-5/</id>
    <published>2020-11-28T11:00:00.000Z</published>
    <updated>2020-11-30T11:02:42.623Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;集群&quot;&gt;&lt;a href=&quot;#集群&quot; class=&quot;headerlink&quot; title=&quot;集群&quot;&gt;&lt;/a&gt;集群&lt;/h2&gt;&lt;p&gt;Redis
        
      
    
    </summary>
    
      <category term="redis" scheme="http://seanthefish.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://seanthefish.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis进阶之哨兵</title>
    <link href="http://seanthefish.com/2020/11/28/redis-4/"/>
    <id>http://seanthefish.com/2020/11/28/redis-4/</id>
    <published>2020-11-28T10:00:00.000Z</published>
    <updated>2020-11-30T09:06:51.967Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;哨兵&quot;&gt;&lt;a href=&quot;#哨兵&quot; class=&quot;headerlink&quot; title=&quot;哨兵&quot;&gt;&lt;/a&gt;哨兵&lt;/h2&gt;&lt;p&gt;Redis的主从复制模式下，一旦主节点由于故障不能提供服务，需要人 工将从节点晋升为主节点，同时还要通知应用方更新主节点地址，对于很多
        
      
    
    </summary>
    
      <category term="redis" scheme="http://seanthefish.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://seanthefish.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis进阶之优化</title>
    <link href="http://seanthefish.com/2020/11/28/redis-3/"/>
    <id>http://seanthefish.com/2020/11/28/redis-3/</id>
    <published>2020-11-28T09:00:00.000Z</published>
    <updated>2020-11-29T12:47:09.572Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;阻塞&quot;&gt;&lt;a href=&quot;#阻塞&quot; class=&quot;headerlink&quot; title=&quot;阻塞&quot;&gt;&lt;/a&gt;阻塞&lt;/h2&gt;&lt;p&gt;Redis是典型的单线程架构，所有的读写操作都是在一条主线程中完成 的。当Redis用于高并发场景时，这条线程就变成了它的生命线。如果出现
        
      
    
    </summary>
    
      <category term="redis" scheme="http://seanthefish.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://seanthefish.com/tags/redis/"/>
    
  </entry>
  
</feed>
