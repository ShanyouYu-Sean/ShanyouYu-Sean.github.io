<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小鱼肖恩</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://seanthefish.com/"/>
  <updated>2020-12-06T13:21:20.456Z</updated>
  <id>http://seanthefish.com/</id>
  
  <author>
    <name>Sean Yu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nio</title>
    <link href="http://seanthefish.com/2020/12/01/nio-3/"/>
    <id>http://seanthefish.com/2020/12/01/nio-3/</id>
    <published>2020-12-01T05:00:00.000Z</published>
    <updated>2020-12-06T13:21:20.456Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;转载自 海纳老师的专栏 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/27296046&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://zhuanlan.zhihu.com/p/27296046&lt;/a&gt; 
        
      
    
    </summary>
    
      <category term="nio" scheme="http://seanthefish.com/categories/nio/"/>
    
    
      <category term="nio" scheme="http://seanthefish.com/tags/nio/"/>
    
  </entry>
  
  <entry>
    <title>epoll的本质</title>
    <link href="http://seanthefish.com/2020/12/01/nio-2/"/>
    <id>http://seanthefish.com/2020/12/01/nio-2/</id>
    <published>2020-12-01T04:00:00.000Z</published>
    <updated>2020-12-06T13:21:09.224Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;放三个链接，目前能看到讲解epoll最好的文章，感谢作者。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/63179839&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="nio" scheme="http://seanthefish.com/categories/nio/"/>
    
    
      <category term="nio" scheme="http://seanthefish.com/tags/nio/"/>
    
  </entry>
  
  <entry>
    <title>认识socket和Linux io模型</title>
    <link href="http://seanthefish.com/2020/12/01/nio-1/"/>
    <id>http://seanthefish.com/2020/12/01/nio-1/</id>
    <published>2020-12-01T03:00:00.000Z</published>
    <updated>2020-12-06T13:21:05.703Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;什么是socket&quot;&gt;&lt;a href=&quot;#什么是socket&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="nio" scheme="http://seanthefish.com/categories/nio/"/>
    
    
      <category term="nio" scheme="http://seanthefish.com/tags/nio/"/>
    
  </entry>
  
  <entry>
    <title>网络基础</title>
    <link href="http://seanthefish.com/2020/12/01/network-1/"/>
    <id>http://seanthefish.com/2020/12/01/network-1/</id>
    <published>2020-12-01T02:00:00.000Z</published>
    <updated>2020-12-04T09:52:20.009Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;文章参考 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/147370653&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://zhuanlan.zhihu.com/p/147370653&lt;/a&gt; &lt;a
        
      
    
    </summary>
    
      <category term="network" scheme="http://seanthefish.com/categories/network/"/>
    
    
      <category term="network" scheme="http://seanthefish.com/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>深拷贝与浅拷贝</title>
    <link href="http://seanthefish.com/2020/11/30/deep-copy/"/>
    <id>http://seanthefish.com/2020/11/30/deep-copy/</id>
    <published>2020-11-30T02:00:00.000Z</published>
    <updated>2020-12-05T08:51:38.191Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;转自 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/95686213&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://zhuanlan.zhihu.com/p/95686213&lt;/a&gt;  有改动&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
      <category term="基础" scheme="http://seanthefish.com/categories/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="基础" scheme="http://seanthefish.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>raft算法</title>
    <link href="http://seanthefish.com/2020/11/29/raft/"/>
    <id>http://seanthefish.com/2020/11/29/raft/</id>
    <published>2020-11-29T02:00:00.000Z</published>
    <updated>2020-11-30T07:07:07.843Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;本来想在k8s章节里在说raft算法的，但看redis选主的时候发现用的也是raft算法，故提前把raft算法拿出来说一下。&lt;/p&gt;
&lt;p&gt;raft算法的动画演示：&lt;a href=&quot;http://thesecretlivesofdata.com/raft/&quot;
        
      
    
    </summary>
    
      <category term="raft" scheme="http://seanthefish.com/categories/raft/"/>
    
    
      <category term="raft" scheme="http://seanthefish.com/tags/raft/"/>
    
  </entry>
  
  <entry>
    <title>redis进阶之消息队列</title>
    <link href="http://seanthefish.com/2020/11/28/redis-8/"/>
    <id>http://seanthefish.com/2020/11/28/redis-8/</id>
    <published>2020-11-28T13:00:00.000Z</published>
    <updated>2020-12-01T09:01:45.404Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;文章转载自 &lt;a href=&quot;https://medium.com/@cheukfung/redis%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97-f4f75404647f&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="redis" scheme="http://seanthefish.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://seanthefish.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis进阶之分布式锁</title>
    <link href="http://seanthefish.com/2020/11/28/redis-7/"/>
    <id>http://seanthefish.com/2020/11/28/redis-7/</id>
    <published>2020-11-28T12:00:00.000Z</published>
    <updated>2020-12-01T08:34:30.542Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;hr&gt;
&lt;p&gt;写过一个单节点版的redis分布式锁，源码在这里 &lt;a href=&quot;https://github.com/IBM/distributed-lock-spring-boot-starter&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="redis" scheme="http://seanthefish.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://seanthefish.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis进阶之缓存</title>
    <link href="http://seanthefish.com/2020/11/28/redis-6/"/>
    <id>http://seanthefish.com/2020/11/28/redis-6/</id>
    <published>2020-11-28T12:00:00.000Z</published>
    <updated>2020-12-04T11:56:24.852Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;缓存的收益和成本&quot;&gt;&lt;a href=&quot;#缓存的收益和成本&quot; class=&quot;headerlink&quot; title=&quot;缓存的收益和成本&quot;&gt;&lt;/a&gt;缓存的收益和成本&lt;/h2&gt;&lt;p&gt;收益:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加速读写:
        
      
    
    </summary>
    
      <category term="redis" scheme="http://seanthefish.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://seanthefish.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis进阶之集群</title>
    <link href="http://seanthefish.com/2020/11/28/redis-5/"/>
    <id>http://seanthefish.com/2020/11/28/redis-5/</id>
    <published>2020-11-28T11:00:00.000Z</published>
    <updated>2020-11-30T11:02:42.623Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;集群&quot;&gt;&lt;a href=&quot;#集群&quot; class=&quot;headerlink&quot; title=&quot;集群&quot;&gt;&lt;/a&gt;集群&lt;/h2&gt;&lt;p&gt;Redis
        
      
    
    </summary>
    
      <category term="redis" scheme="http://seanthefish.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://seanthefish.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis进阶之哨兵</title>
    <link href="http://seanthefish.com/2020/11/28/redis-4/"/>
    <id>http://seanthefish.com/2020/11/28/redis-4/</id>
    <published>2020-11-28T10:00:00.000Z</published>
    <updated>2020-11-30T09:06:51.967Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;哨兵&quot;&gt;&lt;a href=&quot;#哨兵&quot; class=&quot;headerlink&quot; title=&quot;哨兵&quot;&gt;&lt;/a&gt;哨兵&lt;/h2&gt;&lt;p&gt;Redis的主从复制模式下，一旦主节点由于故障不能提供服务，需要人 工将从节点晋升为主节点，同时还要通知应用方更新主节点地址，对于很多
        
      
    
    </summary>
    
      <category term="redis" scheme="http://seanthefish.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://seanthefish.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis进阶之优化</title>
    <link href="http://seanthefish.com/2020/11/28/redis-3/"/>
    <id>http://seanthefish.com/2020/11/28/redis-3/</id>
    <published>2020-11-28T09:00:00.000Z</published>
    <updated>2020-11-29T12:47:09.572Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;阻塞&quot;&gt;&lt;a href=&quot;#阻塞&quot; class=&quot;headerlink&quot; title=&quot;阻塞&quot;&gt;&lt;/a&gt;阻塞&lt;/h2&gt;&lt;p&gt;Redis是典型的单线程架构，所有的读写操作都是在一条主线程中完成 的。当Redis用于高并发场景时，这条线程就变成了它的生命线。如果出现
        
      
    
    </summary>
    
      <category term="redis" scheme="http://seanthefish.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://seanthefish.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis进阶之复制</title>
    <link href="http://seanthefish.com/2020/11/28/redis-2/"/>
    <id>http://seanthefish.com/2020/11/28/redis-2/</id>
    <published>2020-11-28T08:00:00.000Z</published>
    <updated>2020-11-30T14:54:08.390Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;建立复制&quot;&gt;&lt;a href=&quot;#建立复制&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="redis" scheme="http://seanthefish.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://seanthefish.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis基础</title>
    <link href="http://seanthefish.com/2020/11/28/redis-1/"/>
    <id>http://seanthefish.com/2020/11/28/redis-1/</id>
    <published>2020-11-28T07:00:00.000Z</published>
    <updated>2020-11-29T11:08:37.222Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;为啥快&quot;&gt;&lt;a href=&quot;#为啥快&quot; class=&quot;headerlink&quot; title=&quot;为啥快&quot;&gt;&lt;/a&gt;为啥快&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;纯内存访问，Redis将所有数据放在内存中，内存的响应时长大
        
      
    
    </summary>
    
      <category term="redis" scheme="http://seanthefish.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://seanthefish.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>spring aop源码解析</title>
    <link href="http://seanthefish.com/2020/11/27/spring-2/"/>
    <id>http://seanthefish.com/2020/11/27/spring-2/</id>
    <published>2020-11-27T07:00:00.000Z</published>
    <updated>2020-11-28T14:31:51.318Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;直接看 &lt;a href=&quot;https://segmentfault.com/a/1190000022726755&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="spring" scheme="http://seanthefish.com/categories/spring/"/>
    
    
      <category term="spring" scheme="http://seanthefish.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>spring ioc源码解析</title>
    <link href="http://seanthefish.com/2020/11/26/spring-1/"/>
    <id>http://seanthefish.com/2020/11/26/spring-1/</id>
    <published>2020-11-26T07:00:00.000Z</published>
    <updated>2020-11-28T09:45:02.026Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;网上资料很多也很杂，这玩意我在公司开过session专门讲过，也算是比较了解，这里不啰嗦，直接用springboot的源码结合网上的资料总结下。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;public static void main(String[]
        
      
    
    </summary>
    
      <category term="spring" scheme="http://seanthefish.com/categories/spring/"/>
    
    
      <category term="spring" scheme="http://seanthefish.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>设计模式</title>
    <link href="http://seanthefish.com/2020/11/25/design-patterns/"/>
    <id>http://seanthefish.com/2020/11/25/design-patterns/</id>
    <published>2020-11-25T07:00:00.000Z</published>
    <updated>2020-11-26T12:24:33.141Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;a href=&quot;http://c.biancheng.net/view/8385.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://c.biancheng.net/view/8385.html&lt;/a&gt; 
        
      
    
    </summary>
    
      <category term="设计模式" scheme="http://seanthefish.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="http://seanthefish.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>用LockSupport实现一个先进先出的不可重入锁</title>
    <link href="http://seanthefish.com/2020/11/25/juc-action-2/"/>
    <id>http://seanthefish.com/2020/11/25/juc-action-2/</id>
    <published>2020-11-25T06:00:00.000Z</published>
    <updated>2020-12-06T13:20:32.080Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;这是网上的解法，感觉不太好，还用了ConcurrentLinkedQueue&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;public class FIFOMutex {

    private final AtomicBoolean locked =
        
      
    
    </summary>
    
      <category term="并发" scheme="http://seanthefish.com/categories/%E5%B9%B6%E5%8F%91/"/>
    
    
      <category term="并发" scheme="http://seanthefish.com/tags/%E5%B9%B6%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>并发案例之生产者消费者</title>
    <link href="http://seanthefish.com/2020/11/25/juc-action-1/"/>
    <id>http://seanthefish.com/2020/11/25/juc-action-1/</id>
    <published>2020-11-25T05:00:00.000Z</published>
    <updated>2020-12-06T13:20:27.706Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;转自 &lt;a href=&quot;https://my.oschina.net/hosee/blog/485121#OSC_h4_4&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="并发" scheme="http://seanthefish.com/categories/%E5%B9%B6%E5%8F%91/"/>
    
    
      <category term="并发" scheme="http://seanthefish.com/tags/%E5%B9%B6%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>juc之ForkJoinPool</title>
    <link href="http://seanthefish.com/2020/11/25/juc-18/"/>
    <id>http://seanthefish.com/2020/11/25/juc-18/</id>
    <published>2020-11-25T04:00:00.000Z</published>
    <updated>2020-12-06T13:20:22.613Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;直接看这篇文章吧，我觉得了解就好了，实际似乎用的场景很少？&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.dyngr.com/blog/2016/09/15/java-forkjoinpool-internals/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="并发" scheme="http://seanthefish.com/categories/%E5%B9%B6%E5%8F%91/"/>
    
    
      <category term="并发" scheme="http://seanthefish.com/tags/%E5%B9%B6%E5%8F%91/"/>
    
  </entry>
  
</feed>
